(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{467:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("blockquote",[s("p",[t._v("在前端工程化的道路上，少不了许许多多出色的工具的铺垫，今天就来学习一下，在团队合作的项目中，如何规范大家提交的commit，以便项目的管理。")])]),t._v(" "),s("h2",{attrs:{id:"commitlint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commitlint"}},[t._v("#")]),t._v(" commitlint")]),t._v(" "),s("p",[t._v("commitlint是对我们提交commit的格式的一种约束，可以起到很好的统一作用，如果有人提交的commit不符合规范，那就可以阻止本次提交。")]),t._v(" "),s("ul",[s("li",[t._v("提交格式 (注意冒号后面有空格)")])]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("optional scope"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("description"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("blockquote",[s("p",[t._v("type ：用于表明我们这次提交的改动类型，是新增了功能？还是修改了测试代码？又或者是更新了文档？\noptional scope：一个可选的修改范围。用于标识此次提交主要涉及到代码中哪个模块。\ndescription：一句话描述此次提交的主要内容，做到言简意赅。")])]),t._v(" "),s("ul",[s("li",[t._v("常见的type类型")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("build")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("编译相关的修改，例如发布版本、对项目构建或者依赖的改动")])]),t._v(" "),s("tr",[s("td",[t._v("chore")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("其他修改, 比如改变构建流程、或者增加依赖库、工具等")])]),t._v(" "),s("tr",[s("td",[t._v("ci")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("持续集成修改")])]),t._v(" "),s("tr",[s("td",[t._v("docs")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("文档修改")])]),t._v(" "),s("tr",[s("td",[t._v("feat")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("新特性、新功能")])]),t._v(" "),s("tr",[s("td",[t._v("fix")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("修改bug")])]),t._v(" "),s("tr",[s("td",[t._v("perf")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("优化相关，比如提升性能、体验")])]),t._v(" "),s("tr",[s("td",[t._v("refactor")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("代码重构")])]),t._v(" "),s("tr",[s("td",[t._v("revert")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("回滚到上一个版本")])]),t._v(" "),s("tr",[s("td",[t._v("style")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("代码格式修改, 注意不是 css 修改")])]),t._v(" "),s("tr",[s("td",[t._v("test")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("测试用例修改")])])])]),t._v(" "),s("p",[t._v("在使用他之前还需要认识一个东西，那就是husky")]),t._v(" "),s("h2",{attrs:{id:"husky"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#husky"}},[t._v("#")]),t._v(" husky")]),t._v(" "),s("blockquote",[s("p",[t._v("Modern native Git hooks made easy (轻松创建现代化的原生 git hooks) Husky improves your commits and more 🐶 woof!")])]),t._v(" "),s("p",[t._v("它可以在 git 提交代码的前后，执行一系列的 git hooks，以对代码、文件等进行预设的检查，一旦检查不通过，就可以阻止当前的代码提交，避免了不规范的代码和 git 提交出现在项目中。")]),t._v(" "),s("p",[t._v("通俗一点来说就是husky可以执行git的一些列钩子，例如git commit,git push等等。通过他，再搭配上commitlint，就可以完成我们的规范提交commit的操作了，下面就来一起操作一下吧")]),t._v(" "),s("h2",{attrs:{id:"开始"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开始"}},[t._v("#")]),t._v(" 开始")]),t._v(" "),s("p",[t._v("首先安装一下这两个依赖")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-D")]),t._v(" husky\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save-dev @commitlint/config-conventional @commitlint/cli\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("接下来在根目录创建一个配置文件"),s("code",[t._v("commitlint.config.js")]),t._v("，当然也可以是 ."),s("code",[t._v("commitlintrc.js")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@commitlint/config-conventional'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("下面就是去配置husky了。")]),t._v(" "),s("p",[t._v("在husky（6.0.0）版本之前以及之后的配置方式有点不一样，低版本的配置方法如下")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("package.json")]),t._v("中写入")]),t._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-commit"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在执行git commit之前先自动执行npm run test命令")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit-msg"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -e $HUSKY_GIT_PARAMS"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 校验commit时添加的备注信息是否符合我们要求的规范")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("6.0.0版本之后需要我们自己去生成脚本")]),t._v(" "),s("p",[t._v("首先在package.json中配置")]),t._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"prepare"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"husky install"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("执行这个命令会生成一个.husky/的文件夹，这里面可以对husky进行一些列配置以及放置钩子脚本")]),t._v(" "),s("p",[t._v("执行")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("npx husky "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" .husky/pre-commit "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run test"')]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("运行完该命令后我们会看到.husky/目录下新增了一个名为pre-commit的shell脚本。也就是说在在执行git commit命令时会先执行pre-commit这个脚本。pre-commit脚本内容如下：")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/sh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dirname")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('/_/husky.sh"')]),t._v("\n   \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("可以看到该脚本的功能就是执行npm run test这个命令")]),t._v(" "),s("p",[t._v("再执行")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("npx husky "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" .husky/commit-msg "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'npx --no-install commitlint --edit \"$1\"'")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("就会生成commit-msg脚本")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/usr/bin/env sh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dirname")]),t._v(" -- "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('/_/husky.sh"')]),t._v("\n\nnpx --no-install commitlint "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--edit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("这样，当我们在提交代码的时候就可以进行自动校验或者在commit之前执行一些脚本拉，比如在提交commit之前先执行一下测试脚本，或者先执行lint代码检查之类的。")])])}),[],!1,null,null,null);s.default=e.exports}}]);